// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	"microservice/internal/core/domain/example"

	mock "github.com/stretchr/testify/mock"
)

// NewMockEntityChecker creates a new instance of MockEntityChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEntityChecker(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEntityChecker {
	mock := &MockEntityChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockEntityChecker is an autogenerated mock type for the EntityChecker type
type MockEntityChecker struct {
	mock.Mock
}

type MockEntityChecker_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEntityChecker) EXPECT() *MockEntityChecker_Expecter {
	return &MockEntityChecker_Expecter{mock: &_m.Mock}
}

// CheckEntityForCreation provides a mock function for the type MockEntityChecker
func (_mock *MockEntityChecker) CheckEntityForCreation(entity *example.Entity) error {
	ret := _mock.Called(entity)

	if len(ret) == 0 {
		panic("no return value specified for CheckEntityForCreation")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(*example.Entity) error); ok {
		r0 = returnFunc(entity)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockEntityChecker_CheckEntityForCreation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckEntityForCreation'
type MockEntityChecker_CheckEntityForCreation_Call struct {
	*mock.Call
}

// CheckEntityForCreation is a helper method to define mock.On call
//   - entity *example.Entity
func (_e *MockEntityChecker_Expecter) CheckEntityForCreation(entity interface{}) *MockEntityChecker_CheckEntityForCreation_Call {
	return &MockEntityChecker_CheckEntityForCreation_Call{Call: _e.mock.On("CheckEntityForCreation", entity)}
}

func (_c *MockEntityChecker_CheckEntityForCreation_Call) Run(run func(entity *example.Entity)) *MockEntityChecker_CheckEntityForCreation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 *example.Entity
		if args[0] != nil {
			arg0 = args[0].(*example.Entity)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockEntityChecker_CheckEntityForCreation_Call) Return(err error) *MockEntityChecker_CheckEntityForCreation_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockEntityChecker_CheckEntityForCreation_Call) RunAndReturn(run func(entity *example.Entity) error) *MockEntityChecker_CheckEntityForCreation_Call {
	_c.Call.Return(run)
	return _c
}
